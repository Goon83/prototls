// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: my_protocol.proto

#ifndef PROTOBUF_my_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_my_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace my_protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_my_5fprotocol_2eproto();
void protobuf_AssignDesc_my_5fprotocol_2eproto();
void protobuf_ShutdownFile_my_5fprotocol_2eproto();

class Hello;
class ServerMessage;
class ClientMessage;

// ===================================================================

class Hello : public ::google::protobuf::Message {
 public:
  Hello();
  virtual ~Hello();
  
  Hello(const Hello& from);
  
  inline Hello& operator=(const Hello& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Hello& default_instance();
  
  void Swap(Hello* other);
  
  // implements Message ----------------------------------------------
  
  Hello* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hello& from);
  void MergeFrom(const Hello& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string greeting = 1;
  inline bool has_greeting() const;
  inline void clear_greeting();
  static const int kGreetingFieldNumber = 1;
  inline const ::std::string& greeting() const;
  inline void set_greeting(const ::std::string& value);
  inline void set_greeting(const char* value);
  inline void set_greeting(const char* value, size_t size);
  inline ::std::string* mutable_greeting();
  
  // @@protoc_insertion_point(class_scope:my_protocol.Hello)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* greeting_;
  static const ::std::string _default_greeting_;
  friend void  protobuf_AddDesc_my_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_my_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_my_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Hello* default_instance_;
};
// -------------------------------------------------------------------

class ServerMessage : public ::google::protobuf::Message {
 public:
  ServerMessage();
  virtual ~ServerMessage();
  
  ServerMessage(const ServerMessage& from);
  
  inline ServerMessage& operator=(const ServerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerMessage& default_instance();
  
  void Swap(ServerMessage* other);
  
  // implements Message ----------------------------------------------
  
  ServerMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerMessage& from);
  void MergeFrom(const ServerMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .my_protocol.Hello hello = 1;
  inline bool has_hello() const;
  inline void clear_hello();
  static const int kHelloFieldNumber = 1;
  inline const ::my_protocol::Hello& hello() const;
  inline ::my_protocol::Hello* mutable_hello();
  
  // @@protoc_insertion_point(class_scope:my_protocol.ServerMessage)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::my_protocol::Hello* hello_;
  friend void  protobuf_AddDesc_my_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_my_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_my_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ServerMessage* default_instance_;
};
// -------------------------------------------------------------------

class ClientMessage : public ::google::protobuf::Message {
 public:
  ClientMessage();
  virtual ~ClientMessage();
  
  ClientMessage(const ClientMessage& from);
  
  inline ClientMessage& operator=(const ClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMessage& default_instance();
  
  void Swap(ClientMessage* other);
  
  // implements Message ----------------------------------------------
  
  ClientMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientMessage& from);
  void MergeFrom(const ClientMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .my_protocol.Hello hello = 1;
  inline bool has_hello() const;
  inline void clear_hello();
  static const int kHelloFieldNumber = 1;
  inline const ::my_protocol::Hello& hello() const;
  inline ::my_protocol::Hello* mutable_hello();
  
  // @@protoc_insertion_point(class_scope:my_protocol.ClientMessage)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::my_protocol::Hello* hello_;
  friend void  protobuf_AddDesc_my_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_my_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_my_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ClientMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// Hello

// required string greeting = 1;
inline bool Hello::has_greeting() const {
  return _has_bit(0);
}
inline void Hello::clear_greeting() {
  if (greeting_ != &_default_greeting_) {
    greeting_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& Hello::greeting() const {
  return *greeting_;
}
inline void Hello::set_greeting(const ::std::string& value) {
  _set_bit(0);
  if (greeting_ == &_default_greeting_) {
    greeting_ = new ::std::string;
  }
  greeting_->assign(value);
}
inline void Hello::set_greeting(const char* value) {
  _set_bit(0);
  if (greeting_ == &_default_greeting_) {
    greeting_ = new ::std::string;
  }
  greeting_->assign(value);
}
inline void Hello::set_greeting(const char* value, size_t size) {
  _set_bit(0);
  if (greeting_ == &_default_greeting_) {
    greeting_ = new ::std::string;
  }
  greeting_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Hello::mutable_greeting() {
  _set_bit(0);
  if (greeting_ == &_default_greeting_) {
    greeting_ = new ::std::string;
  }
  return greeting_;
}

// -------------------------------------------------------------------

// ServerMessage

// optional .my_protocol.Hello hello = 1;
inline bool ServerMessage::has_hello() const {
  return _has_bit(0);
}
inline void ServerMessage::clear_hello() {
  if (hello_ != NULL) hello_->::my_protocol::Hello::Clear();
  _clear_bit(0);
}
inline const ::my_protocol::Hello& ServerMessage::hello() const {
  return hello_ != NULL ? *hello_ : *default_instance_->hello_;
}
inline ::my_protocol::Hello* ServerMessage::mutable_hello() {
  _set_bit(0);
  if (hello_ == NULL) hello_ = new ::my_protocol::Hello;
  return hello_;
}

// -------------------------------------------------------------------

// ClientMessage

// optional .my_protocol.Hello hello = 1;
inline bool ClientMessage::has_hello() const {
  return _has_bit(0);
}
inline void ClientMessage::clear_hello() {
  if (hello_ != NULL) hello_->::my_protocol::Hello::Clear();
  _clear_bit(0);
}
inline const ::my_protocol::Hello& ClientMessage::hello() const {
  return hello_ != NULL ? *hello_ : *default_instance_->hello_;
}
inline ::my_protocol::Hello* ClientMessage::mutable_hello() {
  _set_bit(0);
  if (hello_ == NULL) hello_ = new ::my_protocol::Hello;
  return hello_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace my_protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_my_5fprotocol_2eproto__INCLUDED
